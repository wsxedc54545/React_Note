{"version":3,"sources":["TodoItem.js","constants/style.js","useTodos.js","useInput.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItemWrapper","styled","div","TodoContent","props","theme","colors","primary_100","size","isDone","DeleteButton","button","TodoItem","className","todo","handleDeleteTodo","handleToggleIsDone","id","onClick","content","useTodos","useRef","useState","todoData","JSON","parse","window","localStorage","getItem","length","current","todos","setTodos","value","setValue","handleChange","e","target","useInput","useEffect","setItem","stringify","writeTodosToLocalStorage","handleBtnClick","handleKeyDown","keyCode","filter","map","InputContainer","TodoContainer","App","style","width","padding","border","borderRadius","marginRight","type","placeholder","onChange","onKeyDown","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","primary_200","primary_300","document","getElementById"],"mappings":"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","file":"static/js/main.200582f3.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { MEDIA_QUERY_MD, MEDIA_QUERY_SM } from './constants/style';\n\n\nconst TodoItemWrapper = styled.div`\n  position: relative;\n  background-color: rgba(255,211,112,1);width: 200px;height: 200px;\n  margin: 10px;\n  display: wrap;\n  justify-content: center;\n  align-items: center;\n  white-space: wrap;\n  overflow:scroll;\n  text-overflow: ellipsis;\n  line-height: 1.5;\n  \n  &:hover {\n    border: 1px solid brown;\n    transform: scale(1.1);\n  }\n\n  ${MEDIA_QUERY_MD} {\n    min-width: 300px;\n  }\n  ${MEDIA_QUERY_SM} {\n    min-width: 200px;\n  }\n`\n\nconst TodoContent = styled.div`\n  color: ${props => props.theme.colors.primary_100};\n  font-size: 14px;\n\n  ${props => props.size === 'XL' && `\n    font-size: 20px;\n  `}\n\n  ${props => props.isDone && `\n    text-decoration: line-through;\n  `}\n  \n  padding: 30px 15px;\n`\n\nconst TodoButtonWrapper = styled.div``\n\nconst DeleteButton = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  // background: #5F5E70;\n  border: none;\n\n  &:hover {\n    border: 1px solid brown;\n    transform: scale(1.1);\n  }\n`\n\nexport default function TodoItem ({className, todo, size,handleDeleteTodo, handleToggleIsDone}) {\n  const handleToggleClick = () => {\n    handleToggleIsDone(todo.id);\n  }\n  return (\n    <TodoItemWrapper className={className} data-todo-id={todo.id}>\n      <DeleteButton onClick={() => {handleDeleteTodo(todo.id)}}>\n        ❌\n      </DeleteButton>\n      <TodoContent isDone={todo.isDone} size={size}>{todo.content}</TodoContent>\n      \n    </TodoItemWrapper>\n  )\n}","export const MEDIA_QUERY_MD = '@media screen and (max-width:768px)'\nexport const MEDIA_QUERY_SM = '@media screen and (max-width:441px)'","// useTodo.js\nimport { useState, useEffect, useRef } from \"react\";\nimport useInput from \"./useInput\";\n\nfunction writeTodosToLocalStorage(todos) {\n  window.localStorage.setItem(\"todos\", JSON.stringify(todos));\n}\n\nexport default function useTodos() {\n  const id = useRef(1);\n\n  const [todos, setTodos] = useState(() => {\n    // 把 todos 轉回陣列型態\n    let todoData = JSON.parse(window.localStorage.getItem(\"todos\")) || \"\";\n    // 改由陣列長度判斷是否為空陣列\n    if (todoData.length) {\n      id.current = todoData[0].id + 1;\n    } else {\n      todoData = [];\n    }\n    return todoData;\n  });\n\n  // 從 useInput 讀取 value 資料\n  const { value, setValue, handleChange } = useInput();\n\n  useEffect(() => {\n    writeTodosToLocalStorage(todos);\n  }, [todos]);\n\n  const handleBtnClick = () => {\n    setTodos([{\n      id: id.current,\n      content: value\n    }, ...todos])\n    setValue('')\n    id.current++\n  }\n\n  // enter 新增 todo\n  const handleKeyDown = (e) => {\n    if (e.keyCode !== 13) return;\n    handleBtnClick()\n  };\n\n  const handleDeleteTodo = id => {\n    // 若用 splice() 會改到原本的 todo，因此要用 filter()，留下該 id 以外的 todo\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  const handleToggleIsDone = id => {\n    setTodos(todos.map(todo => {\n      // 如果不是要修改的 todo id 就直接回傳\n      if (todo.id !== id) return todo;\n      // 要修改的 todo id\n      return {\n        // todo 原本的東西\n        ...todo,\n        // 要修改的屬性\n        isDone: !todo.isDone\n      }\n    }));\n  }\n\n  return {\n    todos,\n    setTodos,\n    id,\n\n    handleBtnClick,\n    handleKeyDown,\n    handleDeleteTodo,\n    handleToggleIsDone,\n\n    value,\n    setValue,\n    handleChange,\n  };\n}","// 從 react 引入 useState\nimport { useState } from \"react\";\n\n// 匯出 useInput()\nexport default function useInput() {\n  const [value, setValue] = useState(\"\");\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n  return {\n    value,\n    setValue,\n    handleChange,\n  };\n}","import {useState, useRef, useEffect,useLayoutEffect} from 'react';\nimport styled from 'styled-components';\nimport TodoItem from './TodoItem';\nimport useTodos from \"./useTodos\";\n\nconst InputContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`\nconst TodoInput = styled.div`\n  margin: 15px 0;\n  width: 820px;\n  height: 45px;\n  padding: 10px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-color: rgba(0, 0, 0, 0.05) rgba(0, 0, 0, 0.08) rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  box-shadow: 0 3px 4px rgba(0, 0, 0, 0.05);\n\n`\n\nconst TodoContainer = styled.div`\n  margin-left: 10%;\n  display: flex;\n  flex-wrap: wrap;\n  width: 800px;\n`\n\nfunction App() {\n  // 從 useTodos 讀取 todos 資料\n  const {\n    todos,\n    setTodos,\n    id,\n    handleBtnClick,\n    handleKeyDown,\n    handleToggleIsDone,\n    handleDeleteTodo,\n    value,\n    setValue,\n    handleChange,\n  } = useTodos();\n\n  return (\n    <div className=\"App\">\n      <InputContainer>\n      <input style={{\n        width: '300px', \n        padding: '10px',\n        border: '1px solid rgba(0, 0, 0, 0.1)',\n        borderRadius: '10px',\n        marginRight: '25px'}}\n        type=\"text\" placeholder=\"Add todo...\" value={value}\n        // 改為 handleChange\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}/>\n\n      <button style={{\n           border: '1px solid rgba(0, 0, 0, 0.1)',\n           borderRadius: '10px',\n        }} \n      onClick={handleBtnClick}>新增</button>\n      </InputContainer>\n\n      <hr/>\n      <TodoContainer>\n        {\n          todos.map(todo => <TodoItem key={todo.id} todo={todo} handleDeleteTodo={handleDeleteTodo} handleToggleIsDone={handleToggleIsDone}/>)\n        }\n      </TodoContainer>\n    </div>\n  );\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from 'styled-components'\n\nconst theme = {\n  colors: {\n    primary_100: '#000',\n    primary_200: '#F01DCD',\n    primary_300: '#B825D9',\n  }\n}\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// React.StrictMode 為React的嚴格模式\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}